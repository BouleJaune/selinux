{"config":{"lang":["fr"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Comprendre SELinux et savoir modifier la politique de s\u00e9curit\u00e9","text":""},{"location":"#objectifs-pedagogiques","title":"Objectifs p\u00e9dagogiques :","text":"<ul> <li>Approfondir la compr\u00e9hension du fonctionnement de SELinux</li> <li>Ma\u00eetriser les outils de gestion et d\u2019analyse des politiques SELinux</li> <li>Savoir \u00e9crire, modifier et d\u00e9ployer des modules de politique personnalis\u00e9e</li> <li>Comprendre l\u2019usage de SELinux dans les environnements \u00e0 haute s\u00e9curit\u00e9 (MLS/MCS)</li> <li>Appliquer SELinux efficacement dans des environnements conteneuris\u00e9s</li> </ul>"},{"location":"#programme","title":"Programme :","text":""},{"location":"#introduction-a-selinux","title":"Introduction \u00e0 SELinux","text":"<ul> <li>Rappel du syst\u00e8me de droits classique Linux et m\u00e9canisme MAC</li> <li>Pr\u00e9sentation du contexte de s\u00e9curit\u00e9 : <code>user:role:type:level</code></li> <li>Modes de fonctionnement et politiques disponibles (<code>targeted</code>, <code>mls</code>, <code>strict</code>)</li> <li>\u00c9tats de fonctionnement (<code>getenforce</code>, <code>setenforce</code>, <code>sestatus</code>, <code>selinuxenabled</code>)</li> </ul>"},{"location":"#diagnostic-et-analyse-des-blocages-selinux","title":"Diagnostic et analyse des blocages SELinux","text":"<ul> <li>Lecture et compr\u00e9hension des messages AVC</li> <li>Utilisation des outils <code>ausearch</code>, <code>audit2why</code>, <code>audit2allow</code></li> <li>Pr\u00e9sentation de <code>sealert</code> et du service <code>setroubleshoot</code></li> <li>Mise en \u00e9vidence de cas pratiques de blocage et r\u00e9solution</li> </ul>"},{"location":"#gestion-avancee-de-la-politique-selinux","title":"Gestion avanc\u00e9e de la politique SELinux","text":"<ul> <li>Exploration d\u2019une politique : <code>seinfo</code>, <code>sesearch</code>, <code>apol</code></li> <li>Commandes : <code>restorecon</code>, <code>setfiles</code>, <code>fixfiles</code>, <code>chcon</code>, <code>semanage</code></li> <li>Gestion des bool\u00e9ens : <code>getsebool</code>, <code>setsebool</code></li> </ul>"},{"location":"#creation-et-modification-de-modules-de-politique-personnalisee","title":"Cr\u00e9ation et modification de modules de politique personnalis\u00e9e","text":"<ul> <li>Structure des fichiers</li> <li>Compilation et d\u00e9ploiement de modules</li> <li>\u00c9criture de r\u00e8gles personnalis\u00e9es</li> <li>Cr\u00e9ation de modules simples et modules plus complexes</li> <li>Bonnes pratiques de maintenance des modules personnalis\u00e9s</li> </ul>"},{"location":"#selinux-et-mcsmls","title":"SELinux et MCS/MLS","text":"<ul> <li>Pr\u00e9sentation de MCS (Multi Category Security) et MLS (Multi Level Security)</li> <li>Gestion des niveaux de s\u00e9curit\u00e9 et cat\u00e9gories MCS</li> <li>Cas d\u2019usage et application concr\u00e8te de l\u2019isolement via MCS/MLS</li> </ul>"},{"location":"#selinux-et-conteneurs-podman-rootless","title":"SELinux et conteneurs (Podman / rootless)","text":"<ul> <li>Fonctionnement de SELinux avec des conteneurs OCI (<code>container_t</code>, policy <code>container-selinux</code>)</li> <li>Impact des options <code>:z</code> et <code>:Z</code> sur les contextes des volumes</li> <li>Utilisation de <code>--security-opt label=...</code> pour g\u00e9rer les contextes</li> <li>Policy custom pour container (Udica)</li> <li>Cas pratiques </li> </ul>"},{"location":"TP1/","title":"Introduction \u00e0 SELinux et Analyse des blocages","text":""},{"location":"TP1/#decouverte-et-etat-de-selinux","title":"D\u00e9couverte et \u00e9tat de SELinux","text":""},{"location":"TP1/#objectifs","title":"Objectifs","text":"<ul> <li>Comprendre le fonctionnement g\u00e9n\u00e9ral de SELinux</li> <li>Identifier et interpr\u00e9ter les contextes SELinux</li> <li>Manipuler les outils de diagnostic des blocages (AVC)</li> <li>R\u00e9soudre des probl\u00e8mes classiques li\u00e9s \u00e0 la politique de s\u00e9curit\u00e9</li> </ul>"},{"location":"TP1/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>VM Fedora Server avec SELinux</li> <li>Acc\u00e8s root</li> <li>Paquets utiles install\u00e9s : <code>policycoreutils</code>, <code>policycoreutils-python-utils</code>, <code>setroubleshoot</code>, <code>audit</code>, <code>selinux-policy-devel</code></li> </ul>"},{"location":"TP1/#verification-de-letat-selinux","title":"V\u00e9rification de l\u2019\u00e9tat SELinux","text":"<p>Utilisez des commandes CLI pour voir l'\u00e9tat de SELinux et voir quelle elle la policy actuellement charg\u00e9e.</p> <p>Vous pouvez aussi utiliser une commande renvoyant un code de retour 1 ou 0 pour voir l'\u00e9tat de SELinux, utile dans les scripts.</p> Commandes <pre><code>getenforce\nsestatus\nselinuxenabled &amp;&amp; echo \"SELinux est activ\u00e9\"\n</code></pre>"},{"location":"TP1/#observation-des-contextes","title":"Observation des contextes","text":"<p>Lister les contextes de : fichiers, processes, ports, utilisateur...</p> Commandes <pre><code>ls -Z /\nps -eZ \nsemanage port -l\nid -Z\n</code></pre>"},{"location":"TP1/#mise-en-evidence-dun-blocage-selinux","title":"Mise en \u00e9vidence d\u2019un blocage SELinux","text":""},{"location":"TP1/#mise-en-place-dun-blocage-selinux-volontaire","title":"Mise en place d\u2019un blocage SELinux volontaire","text":"<p>Nous allons cr\u00e9er un service systemd qui ex\u00e9cute un script simple pour g\u00e9n\u00e9rer des erreurs SELinux.</p> <p>Le script:  <pre><code>echo '#! /bin/bash' &gt; ~/script.sh\necho 'echo \"Run OK\" &gt;&gt; /tmp/log.txt' &gt;&gt; ~/script.sh\nchmod +x ~/script.sh\n</code></pre></p> <p>Le service: <pre><code>cat &lt;&lt;EOF | sudo tee /etc/systemd/system/myscript.service\n[Unit]\nDescription=Test SELinux Script\n\n[Service]\nExecStart=/root/script.sh\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre></p> <p>Activation du service: <pre><code>systemctl daemon-reload\nsystemctl start myscript.service\n</code></pre></p> <p>Le service devrait \u00eatre bloqu\u00e9 par SELinux.</p>"},{"location":"TP1/#analyse-des-messages-avc","title":"Analyse des messages AVC","text":""},{"location":"TP1/#lecture-brute-des-logs","title":"Lecture brute des logs","text":"<p>Retrouvez ces blocages dans les logs du syst\u00e8me de diff\u00e9rentes mani\u00e8res et identifiez la source, cible et action interdite.</p> Commandes <pre><code>less /var/log/audit/audit.log\nausearch -m AVC -ts recent\n</code></pre>"},{"location":"TP1/#reiterer-en-permissive","title":"R\u00e9it\u00e9rer en <code>Permissive</code>","text":"<p>Relancez le service en <code>Permissive</code> et observez les erreurs.</p> Commandes <pre><code>setenforce 0 # Met en permissive\nsystemctl restart myscript.service\ncat /tmp/log.txt # Observez que le script s'\u00e9x\u00e9cute bien maintenant\nausearch -m AVC -ts recent # De multiples erreurs sont visibles\n</code></pre> Les diff\u00e9rentes erreurs visibles en Permissive <p>Il y a maintenant plusieurs erreurs visibles dans les logs car le script ne s'arr\u00eate pas \u00e0 la premi\u00e8re en Permissive.</p> <p>On peut voir les diverses erreurs AVC, n\u00e9anmoins c'est peu lisible.</p>"},{"location":"TP1/#interface-plus-simple-sealert","title":"Interface plus simple : sealert","text":"<p>Utilisez SELinux pour avoir une vue plus lisible des erreurs en Permissive</p> Commandes <pre><code>sealert -a /var/log/audit/audit.log\n</code></pre>"},{"location":"TP1/#correction-du-probleme","title":"Correction du probl\u00e8me","text":"<p>Un script \u00e9x\u00e9cut\u00e9 par un service est en g\u00e9n\u00e9ral dans le dossier <code>/usr/bin</code>, utilisez cette information pour trouver quel contexte mettre \u00e0 <code>script.sh</code> et corriger le probl\u00e8me. </p> Solution <p><pre><code># Observer le contexte des fichiers /usr/bin \nls -lZ /usr/bin | awk 'NR&gt;0 { print $5}' | sort | uniq -c | sort -k1 -n -r | head \n# Le type d'un binaire est bin_t, assignons le \u00e0 myscript.sh\nchcon -t bin_t /root/myscript.sh\nsystemctl restart myscript # Fonctionne !\n</code></pre> Vous pouvez voir ce que <code>bin_t</code> peut faire avec <code>sesearch -s bin_t -A</code></p> <p><pre><code>allow bin_t bin_t:dir { getattr open search };\nallow bin_t bin_t:filesystem associate;\nallow bin_t bin_t:lnk_file { getattr read };\nallow bin_t device_t:filesystem associate;\nallow file_type fs_t:filesystem associate;\nallow file_type hugetlbfs_t:filesystem associate;\nallow file_type noxattrfs:filesystem associate;\nallow file_type tmp_t:filesystem associate;\nallow file_type tmpfs_t:filesystem associate;\n</code></pre> Cela se lit par exemple : Autorise \u00e0 <code>bin_t</code> de { getattr open search } dans les dossiers de type <code>bin_t</code> (premi\u00e8re ligne)</p>"},{"location":"TP2/","title":"Gestion de la politique SELinux","text":""},{"location":"TP2/#apache-httpd-et-restauration-des-contextes","title":"Apache HTTPD et restauration des contextes","text":""},{"location":"TP2/#objectif","title":"Objectif","text":"<p>Corriger un blocage SELinux caus\u00e9 par un mauvais contexte sur un r\u00e9pertoire personnalis\u00e9 utilis\u00e9 par Apache.</p>"},{"location":"TP2/#etapes","title":"\u00c9tapes","text":""},{"location":"TP2/#installation-dapache","title":"Installation d'Apache","text":"<p>Installez Apache et acc\u00e9der \u00e0 un petit fichier depuis un navigateur internet.</p> Solution <p>Installation d'apache et cr\u00e9ation d'un index.html <pre><code>dnf install -y httpd\nsystemctl enable --now httpd\necho \"Coucou\" &gt; /var/www/html/index.html\n</code></pre> Ouverture dans le firewall ! <pre><code>firewall-cmd --add-service=http --permanent\nfirewall-cmd --reload\n</code></pre></p>"},{"location":"TP2/#creer-un-dossier-personnalise","title":"Cr\u00e9er un dossier personnalis\u00e9","text":"<p>Mettez les fichiers du serveur web dans un dossier personnalis\u00e9 ce qui entrainera un blocage.</p> Solution <p>Cr\u00e9ation d'un dossier avec un fichier index.html</p> <pre><code>mkdir /webdata\necho \"Coucou\" &gt; /webdata/index.html\n</code></pre> <p>Modifier la configuration Apache</p> <pre><code>cp /etc/httpd/conf/httpd.conf /tmp/httpd.conf.old\nsed -i 's|/var/www/html|/webdata|g' /etc/httpd/conf/httpd.conf\nsed -i 's|IncludeOptional|#IncludeOptional|g' /etc/httpd/conf/httpd.conf\nsystemctl restart httpd\n</code></pre> <p>Acc\u00e9dez \u00e0 <code>http://{ip-serveur}</code> et notez l'erreur provoqu\u00e9e par SELinux.</p>"},{"location":"TP2/#correction","title":"Correction","text":"<p>Analysez et corrigez le probl\u00e8me de mani\u00e8re permanente avec semanage.</p> Solution <p><pre><code>ls -Zd /webdata\n</code></pre> Le contexte de <code>/webdata</code> est <code>default_t</code>, ce qui emp\u00eache surement Apache d'acc\u00e9der aux fichiers.</p> <p>Utilisons <code>sealert</code> pour voir l'erreur :</p> <p><pre><code>sealert  -a /var/log/audit/audit.log\n</code></pre> <code>sealert</code> nous dit de changer le contexte par d\u00e9faut et nous donnne une longue liste peu pertinente puis nous dit de faire un <code>restorecon</code>.</p> <p>On d\u00e9termine de mani\u00e8re plus pr\u00e9cise le bon type en regardant les types li\u00e9s \u00e0 <code>httpd</code> mais aussi plus simplement le type des fichiers par d\u00e9faut de <code>/var/www/html</code>.</p> <p><pre><code>seinfo -t | grep httpd # On peut voir des types li\u00e9s au \"content\"\nls -lZ /var/www/html/ # Le type de base est httpd_sys_content_t \n</code></pre> Correction : </p> <pre><code># On mets une regex simple pour tout les fichiers dans /webdata\nsemanage fcontext -a -t httpd_sys_content_t \"/webdata(/.*)?\"\nrestorecon -Rv /webdata\n</code></pre> <p>Rechargez la page web. L'acc\u00e8s doit maintenant \u00eatre fonctionnel.</p>"},{"location":"TP2/#utilisation-des-booleens-selinux","title":"Utilisation des bool\u00e9ens SELinux","text":""},{"location":"TP2/#objectif_1","title":"Objectif","text":"<p>Activer un bool\u00e9en SELinux pour permettre une fonctionnalit\u00e9 bloqu\u00e9e par d\u00e9faut (ex. shell restreint via SSH).</p>"},{"location":"TP2/#etapes_1","title":"\u00c9tapes","text":""},{"location":"TP2/#faire-en-sorte-quapache-se-connecte-au-reseau","title":"Faire en sorte qu'Apache se connecte au r\u00e9seau","text":"<p>Faites un script dans <code>/var/www/cgi-bin/</code> qui sera atteignable sur le serveur web, ex\u00e9cut\u00e9 par <code>httpd</code> et r\u00e9cup\u00e8re des infos sur d'autres site web du net.</p> <p>L'url sera sur http://{ip-serveur}/cgi-bin/testnet.sh, mais elle ne devrait pas fonctionner directement.</p> Solution <p>Commen\u00e7ons par remettre \u00e0 z\u00e9ro notre configuration httpd :</p> <pre><code>cp /tmp/httpd.conf.old /etc/httpd/conf/httpd.conf\n````\n\nLe script: \n\n```bash\nmkdir -p /var/www/cgi-bin\ncat &gt; /var/www/cgi-bin/testnet.sh &lt;&lt;EOF\n#!/bin/bash\necho \"Content-type: http\"\necho \"\"\ncurl -s https://channels.nixos.org\nEOF\nchmod +x /var/www/cgi-bin/testnet.sh\n</code></pre> <p>Rajoutez dans la conf httpd : </p> <pre><code>ScriptAlias /cgi-bin/ /var/www/cgi-bin/\n&lt;Directory \"/var/www/cgi-bin\"&gt;\n    AllowOverride None\n    Options +ExecCGI\n    Require all granted\n&lt;/Directory&gt;\n</code></pre> <p>Puis red\u00e9marrez <code>httpd</code> avec <code>systemctl restart httpd</code></p>"},{"location":"TP2/#correction-du-probleme-selinux","title":"Correction du probl\u00e8me SELinux","text":"<p>Observez le blocage SELinux et corrigez via un bool\u00e9en </p> Solution <p><pre><code>sealert -a /var/log/audit/audit.log\n</code></pre> <code>sealert</code> nous sugg\u00e8re pour notre erreur 3 solution avec divers scores de confiance. La premi\u00e8re nous demande si on veut que \"htppd can network connect\", ce qui est bien notre cas. La solution est sugg\u00e9r\u00e9e est d'activer un bool\u00e9en et la commande est fournie.</p> <p><pre><code>setsebool -P httpd_can_network_connect 1 # active le bool\u00e9en de mani\u00e8re permanente\n</code></pre> Le site devrait maintenant \u00eatre accessible.</p>"},{"location":"TP3/","title":"Cr\u00e9ation de module custom","text":""},{"location":"TP3/#creation-de-modules-custom","title":"Cr\u00e9ation de modules custom","text":""},{"location":"TP3/#objectif","title":"Objectif","text":"<p>Cr\u00e9er un module custom pour le service du premier TP.</p>"},{"location":"TP3/#etapes","title":"\u00c9tapes","text":""},{"location":"TP3/#restaurez-le-mauvais-contexte-du-script","title":"Restaurez le (mauvais) contexte du script","text":"<p>Le <code>chcon</code> du script est temporaire, remettez le contexte original et reg\u00e9n\u00e9rez des erreurs.</p> Solution <pre><code># On peut voir la liste des fcontext avec semanage fcontext -l \nrestorecon /root/script.sh\nll -Z /root/script.sh\nsetenforce 0 # Passage permissif pour avoir toutes les erreurs et non juste la premi\u00e8re\nsystemctl restart myscript\n</code></pre>"},{"location":"TP3/#sugestions-sealert-et-creation-de-module","title":"Sugestions <code>sealert</code> et cr\u00e9ation de module","text":"<p>Utilisez <code>sealert</code> et ses suggestions pour cr\u00e9er un module custom. </p> Solution <p>R\u00e9cup\u00e9rer les logs <code>sealert</code></p> <pre><code>journalctl | grep script.sh -A 5 | grep \"lancez sealert\" # Pour r\u00e9cup\u00e9rer pile la bonne alerte et ne pas afficher tout les logs d'auditd\nsealert -l id\n</code></pre> <p><code>sealert</code> nous donne la commande pour g\u00e9n\u00e9rer et activer le module.</p> <p><pre><code>mkdir module1 &amp;&amp; cd module1\nausearch -c \"script.sh\" --raw | audit2allow -M my-scriptsh\nsemodule -i my-scriptsh.pp \n</code></pre> On peut ouvrir le fichier <code>.te</code> pour voir le CIL utilis\u00e9.</p>"},{"location":"TP3/#analyse-plus-poussee","title":"Analyse plus pouss\u00e9e","text":"<p>Une fois le module activ\u00e9, on peut relancer le service.... pour voir qu'il y a encore des erreurs !</p> <p>En effet, un bug fait que le nom de la commande n'est pas toujours vu comme <code>script.sh</code>, mais comme <code>(cript.sh)</code>, le module est g\u00e9n\u00e9rer \u00e0 partir d'un <code>ausearch -c</code> se basant sur le nom de commande !</p> <p>Un autre <code>sealert</code> nous permet de voir une autre commande qui autorisera le nouveau blocage.</p> Nouvelle commande <pre><code>ausearch -c \"(cript.sh)\" --raw | audit2allow -M my-cript\n</code></pre> <p>En comparant les <code>.te</code> on remarque que les permissions accord\u00e9es au type ne sont pas les m\u00eames. On pourrait simplement activer ce module, mais c'est un peu redondant et peu propre.</p> <p>Trouvez une autre mani\u00e8re pour g\u00e9n\u00e9rer un seul module, enlevez le pr\u00e9c\u00e9dent et activez le nouveau.</p> Tips <ul> <li><code>semodule -l</code> et <code>semodule -r</code> sont utiles pour trouver et supprimer des modules.</li> <li>Vous pouvez soit utiliser une mani\u00e8re plus efficace d'utiliser <code>ausearch</code>, soit \u00e9crire directement le <code>.te</code> n\u00e9cessaire puis compiler.</li> </ul> Solution <p>Avec <code>ausearch</code>:</p> <p>On filtre d'une mani\u00e8re plus pr\u00e9cise, notamment avec le <code>pid</code> du process <code>script.sh</code> : </p> <pre><code>ausearch -p 4569 | audit2allow -M myscriptfull\n</code></pre> <p>En \u00e9ditant les <code>.te</code>:</p> <p>On remarque que dans le premier <code>.te</code> il manquait la permission <code>execute</code>, on le rajoute dans le <code>require</code> et le <code>allow</code> puis on compile.</p> <pre><code>checkmodule -M -m -o myscriptfull.mod myscriptfull.te\nsemodule_package -o myscriptfull.pp -m myscriptfull.mod\n</code></pre> <p>Une fois une des deux m\u00e9thodes faites on peut activer le nouveau module unique :</p> <pre><code>semodule -i myscriptfull.pp\n</code></pre> <p>Important: ce module donne les droits au type <code>admin_home_t</code> entier ! Il vaut mieux dans un premier temps placer les choses o\u00f9 il faut, cela r\u00e9duit les besoins de customisation de SELinux et est plus pratique pour des raisons de standardisations.</p> <p>Le FSHS (File System Hierarchy Standard) dit qu'un script d'administration local devrait \u00eatre plac\u00e9 dans <code>/usr/local/bin</code>, qui est un dossier de type <code>bin_t</code> fonctionnant.  </p>"},{"location":"TP3/#creation-dun-nouveau-type-et-dun-module-custom","title":"Cr\u00e9ation d'un nouveau type et d'un module custom","text":"<p>Nous allons utiliser <code>sepolicy generate</code> pour g\u00e9n\u00e9rer un template de policy avec un nouveau type pour notre script.</p> <p>Paquets n\u00e9cessaires:</p> <pre><code>dnf install rpmbuild sepolicy\n</code></pre> <p>Commande pour g\u00e9n\u00e9rer une policy sur un template \"standard init daemon\":</p> <pre><code>mkdir new_pol &amp;&amp; cd new_pol\nsepolicy generate --init /root/script.sh -n script\n./script.sh # Le nom est un peu mal choisi, \n# mais ce script.sh est un nouveau fichier g\u00e9n\u00e9r\u00e9 par la commande\n# Il permet d'installer la nouvelle policy\n</code></pre> <p>Cela va nous g\u00e9n\u00e9rer des types customs et une policy basique pour ce script. On peut voir le contexte pour le fichier dans le <code>.fc</code> (File Context). Il doit \u00eatre de type <code>script_exec_t</code>.</p> <p>Il nous faut l'appliquer avec <code>semanage fcontext -a -t script_exec_t /root/script.sh</code> et <code>restorecon /root/script.sh</code>.</p> <p>Une fois ceci fait on peut relancer le service.</p> <p>Celui marchera, car c'est surtout <code>admin_home_t</code> qui bloquait son ex\u00e9cution, cependant dans d'autres cas il faudrait modifier la policy de mani\u00e8re ad\u00e9quate.</p> <p>Il est important de noter que le template g\u00e9n\u00e9rer met le type <code>script_t</code> (celui du process) en permissive par d\u00e9faut dans le <code>.te</code>.</p>"},{"location":"TP4/","title":"MLS/MCS","text":""},{"location":"TP4/#multi-level-security-mls-multi-category-security-mcs","title":"Multi-Level Security (MLS) &amp; Multi-Category Security (MCS)","text":""},{"location":"TP4/#objectifs-pedagogiques","title":"Objectifs p\u00e9dagogiques","text":"<ul> <li>Comprendre les principes de MLS et MCS dans SELinux.</li> <li>Manipuler les niveaux (<code>s0</code>, <code>s1</code>, etc.) et les cat\u00e9gories (<code>c0</code>, <code>c1</code>, etc.).</li> <li>Mettre en \u0153uvre un isolement de donn\u00e9es bas\u00e9 sur les niveaux et cat\u00e9gories.</li> <li>G\u00e9rer les utilisateurs SELinux avec des plages MLS/MCS d\u00e9finies.</li> </ul>"},{"location":"TP4/#pre-requis","title":"Pr\u00e9-requis","text":"<ul> <li>SELinux activ\u00e9 en mode <code>enforcing</code>.</li> <li>Politique <code>mls</code> ou <code>targeted</code> avec MCS (selon la distribution).</li> <li>Utiliser une machine Fedora ou RHEL avec le support de MLS/MCS (ex. : <code>mls</code> activ\u00e9 via <code>/etc/selinux/config</code>).</li> <li>Avoir le paquet <code>policycoreutils</code>, <code>mcstrans</code>, <code>setools-console</code> install\u00e9.</li> </ul>"},{"location":"TP4/#contexte-du-tp","title":"Contexte du TP","text":"<p>Nous allons simuler une s\u00e9paration d\u2019informations classifi\u00e9es par niveaux (MLS) et par cat\u00e9gories (MCS). Deux utilisateurs vont avoir des droits diff\u00e9rents sur des fichiers en fonction de leur niveau ou de leur appartenance \u00e0 des cat\u00e9gories.</p>"},{"location":"TP4/#creation-dun-environnement-controle","title":"Cr\u00e9ation d\u2019un environnement contr\u00f4l\u00e9","text":""},{"location":"TP4/#creation-des-utilisateurs-linux-et-selinux","title":"Cr\u00e9ation des utilisateurs Linux et SELinux","text":"<pre><code>useradd alice\nuseradd bob\n</code></pre> <p>D\u00e9finir une plage MLS/MCS restreinte \u00e0 chaque utilisateur :</p> <pre><code>semanage user -a -R \"staff_r\" -r \"s0:c0\" mcs_alice\nsemanage user -a -R \"staff_r\" -r \"s0:c1\" mcs_bob\nsemanage login -a -s mcs_alice alice\nsemanage login -a -s mcs_bob bob\n</code></pre> <p>V\u00e9rification :</p> <pre><code>semanage login -l\n</code></pre>"},{"location":"TP4/#manipulation-de-fichiers-avec-contexte-mcs","title":"Manipulation de fichiers avec contexte MCS","text":"<p>Cr\u00e9er un fichier classifi\u00e9 pour chaque cat\u00e9gorie :</p> <pre><code>touch /tmp/data_alice /tmp/data_bob\nchcon -t user_home_t -l s0:c0 /tmp/data_alice\nchcon -t user_home_t -l s0:c1 /tmp/data_bob\n</code></pre>"},{"location":"TP4/#test-de-lecture-croisee","title":"Test de lecture crois\u00e9e","text":"<p>Connectez-vous successivement en tant que <code>alice</code> et <code>bob</code>, testez l'acc\u00e8s \u00e0 chaque fichier :</p> <pre><code>su - alice\ncat /tmp/data_alice\ncat /tmp/data_bob\n</code></pre> <p>Puis :</p> <pre><code>su - bob\ncat /tmp/data_bob\ncat /tmp/data_alice\n</code></pre> <p>Question : Que constatez-vous ? Pourquoi ?</p>"},{"location":"TP4/#changement-de-contexte-de-processus-utilisateur","title":"Changement de contexte de processus utilisateur","text":"<p>Observez les contextes SELinux avec :</p> <pre><code>id -Z\n</code></pre> <p>Puis changez temporairement le contexte MCS d\u2019un shell :</p> <pre><code>sudo runcon -l s0:c0 -- bash\n</code></pre> <p>Tentez \u00e0 nouveau la lecture de fichiers. Testez d'autres cat\u00e9gories.</p>"},{"location":"TP4/#utilisation-avancee-plages-mls","title":"Utilisation avanc\u00e9e : plages MLS","text":"<p>Modifiez l'utilisateur <code>alice</code> pour qu'il ait une plage de niveaux (ex : <code>s0 - s1</code>)</p> <pre><code>semanage user -m -R \"staff_r\" -r \"s0 - s1:c0.c3\" mcs_alice\n</code></pre> <p>Cr\u00e9ez un fichier avec un niveau sup\u00e9rieur :</p> <pre><code>chcon -t user_home_t -l s1 /tmp/data_topsecret\n</code></pre> <p>Testez l\u2019acc\u00e8s avec <code>alice</code>. Essayez de changer de niveau avec <code>runcon</code>.</p>"},{"location":"TP4/#question-bonus","title":"Question bonus","text":"<ul> <li>Que se passe-t-il si <code>alice</code> a acc\u00e8s \u00e0 plusieurs cat\u00e9gories ? Peut-elle combiner les lectures ?</li> <li>Peut-on attribuer plusieurs cat\u00e9gories \u00e0 un fichier ?</li> <li>Quel est l\u2019impact de la commande <code>mcstransd</code> dans l'affichage des contextes ?</li> </ul>"},{"location":"TP4/#nettoyage","title":"Nettoyage","text":"<pre><code>userdel -r alice\nuserdel -r bob\nsemanage login -d alice\nsemanage login -d bob\nsemanage user -d mcs_alice\nsemanage user -d mcs_bob\nrm -f /tmp/data_alice /tmp/data_bob /tmp/data_topsecret\n</code></pre>"},{"location":"TP4/#aller-plus-loin","title":"Aller plus loin","text":"<ul> <li>Cr\u00e9ez un script de v\u00e9rification automatique du niveau et des cat\u00e9gories autoris\u00e9es d\u2019un utilisateur.</li> <li>Int\u00e9grez ce m\u00e9canisme dans un environnement Podman ou systemd avec <code>selinux-label</code>.</li> </ul>"},{"location":"TP4/#flask-selinux-mcsmls","title":"Flask \u2014 SELinux &amp; MCS/MLS","text":""},{"location":"TP4/#objectif-general","title":"Objectif g\u00e9n\u00e9ral","text":"<p>Vous devez restreindre l\u2019acc\u00e8s aux fichiers produits ou consult\u00e9s par l\u2019application <code>fileserve</code> selon des niveaux de confidentialit\u00e9 ou cat\u00e9gories.</p> <p>L\u2019objectif est de simuler un syst\u00e8me \u00e0 compartiments : un utilisateur ne doit acc\u00e9der qu\u2019\u00e0 ses propres documents en fonction de son niveau ou de sa cat\u00e9gorie (ex : \u00e9quipe A vs B, ou classification Confidentiel vs Public).</p>"},{"location":"TP4/#phase-1-activer-la-politique-mls","title":"Phase 1 \u2014 Activer la politique MLS","text":"<p>Question : V\u00e9rifiez si la politique SELinux utilis\u00e9e est bien <code>mls</code>. Sinon, modifiez-la et red\u00e9marrez.</p> <p>Correction :</p> <pre><code>sestatus | grep Policy\n# Pour changer (si n\u00e9cessaire)\nsudo dnf install selinux-policy-mls\nsudo grubby --update-kernel=ALL --args=\"selinux=1 enforcing=1\"\nsudo setsebool secure_mode_policyload on\nsudo reboot\n</code></pre>"},{"location":"TP4/#phase-2-verifier-les-niveaux-de-securite","title":"Phase 2 \u2014 V\u00e9rifier les niveaux de s\u00e9curit\u00e9","text":"<p>Question : Quels niveaux sont d\u00e9finis sur votre syst\u00e8me ? Quel est celui de votre utilisateur actuel ?</p> <p>Correction :</p> <pre><code>semanage user -l\nid -Z\n</code></pre>"},{"location":"TP4/#phase-3-attribuer-des-niveaux-de-confidentialite-a-des-utilisateurs","title":"Phase 3 \u2014 Attribuer des niveaux de confidentialit\u00e9 \u00e0 des utilisateurs","text":"<p>Question : Attribuez \u00e0 <code>userA</code> le niveau <code>s0:c0</code>, et \u00e0 <code>userB</code> le niveau <code>s0:c1</code>.</p> <p>Correction :</p> <pre><code>sudo semanage login -a -s user_u -r s0-s0:c0 userA\nsudo semanage login -a -s user_u -r s0-s0:c1 userB\n</code></pre> <p>V\u00e9rifiez :</p> <pre><code>semanage login -l\n</code></pre>"},{"location":"TP4/#phase-4-creer-des-fichiers-etiquetes-par-niveau","title":"Phase 4 \u2014 Cr\u00e9er des fichiers \u00e9tiquet\u00e9s par niveau","text":"<p>Question : Cr\u00e9ez deux fichiers :</p> <ul> <li>Un fichier accessible uniquement par <code>userA</code> (cat\u00e9gorie c0)</li> <li>Un fichier accessible uniquement par <code>userB</code> (cat\u00e9gorie c1)</li> </ul> <p>Correction :</p> <pre><code>touch /data/userA.txt /data/userB.txt\nchcon --user=user_u --role=object_r --type=default_t --range=s0:c0 /data/userA.txt\nchcon --user=user_u --role=object_r --type=default_t --range=s0:c1 /data/userB.txt\n</code></pre>"},{"location":"TP4/#phase-5-verification-des-acces","title":"Phase 5 \u2014 V\u00e9rification des acc\u00e8s","text":"<p>Question : Connectez-vous en tant que <code>userA</code> et <code>userB</code>, testez l\u2019acc\u00e8s crois\u00e9 aux fichiers. Que constatez-vous ?</p> <p>Correction :</p> <pre><code>su - userA\ncat /data/userA.txt  # OK\ncat /data/userB.txt  # Permission denied (attendu)\n\nsu - userB\ncat /data/userB.txt  # OK\ncat /data/userA.txt  # Permission denied (attendu)\n</code></pre>"},{"location":"TP4/#phase-6-application-concrete-avec-votre-service","title":"Phase 6 \u2014 Application concr\u00e8te avec votre service","text":"<p>Question : Configurez <code>fileserve</code> pour fonctionner selon le m\u00eame principe :</p> <ul> <li>L\u2019instance lanc\u00e9e par <code>userA</code> ne doit lire que les fichiers <code>s0:c0</code></li> <li>Celle de <code>userB</code> que les <code>s0:c1</code></li> </ul> <p>Correction : Il faut :</p> <ul> <li>S\u2019assurer que les processus ont un contexte <code>s0:c0</code> ou <code>s0:c1</code></li> <li>Les fichiers servis doivent \u00eatre labellis\u00e9s avec le bon range</li> </ul> <pre><code>runcon -r system_r -t user_t -l s0:c0 ./fileserve  # pour userA\nruncon -r system_r -t user_t -l s0:c1 ./fileserve  # pour userB\n</code></pre> <p>Labellisez les fichiers correctement :</p> <pre><code>chcon --range=s0:c0 /data/userA-files/*\nchcon --range=s0:c1 /data/userB-files/*\n</code></pre>"},{"location":"TP4/#etape-bonus-multi-categories","title":"\u00c9tape bonus \u2014 Multi cat\u00e9gories","text":"<p>Question : Attribuez \u00e0 un utilisateur les deux cat\u00e9gories <code>c0,c1</code>, testez qu\u2019il peut lire les deux fichiers.</p> <p>Correction :</p> <pre><code>sudo semanage login -a -s user_u -r s0-s0:c0,c1 userAdmin\nruncon -r system_r -t user_t -l s0:c0,c1 ./fileserve\n</code></pre>"},{"location":"TP5/","title":"SELinux et conteneurs","text":""},{"location":"TP5/#conteneurs-podman-en-rootless","title":"Conteneurs Podman en rootless","text":""},{"location":"TP5/#objectifs-pedagogiques","title":"Objectifs p\u00e9dagogiques","text":"<ul> <li>Comprendre comment SELinux isole les conteneurs en mode rootless.</li> <li>Manipuler les options <code>:z</code>, <code>:Z</code>, <code>--security-opt</code> dans Podman.</li> <li>Observer les contextes des processus et volumes dans l\u2019environnement utilisateur.</li> <li>Exp\u00e9rimenter avec des politiques personnalis\u00e9es (Udica).</li> </ul>"},{"location":"TP5/#pre-requis","title":"Pr\u00e9-requis","text":"<ul> <li>Fedora ou RHEL avec Podman install\u00e9 (<code>dnf install podman udica -y</code>)</li> <li>SELinux activ\u00e9 (<code>getenforce</code> doit retourner <code>Enforcing</code>)</li> <li>Utilisateur non-root avec droits sudo</li> <li>Acc\u00e8s SSH ou TTY</li> </ul>"},{"location":"TP5/#mise-en-place-de-lenvironnement","title":"Mise en place de l\u2019environnement","text":"<p>Cr\u00e9er un utilisateur d\u00e9di\u00e9 :</p> <pre><code>sudo useradd -m podtest\nsudo passwd podtest\n</code></pre> <p>Se connecter avec ce nouvel utilisateur :</p> <pre><code>su - podtest\n</code></pre>"},{"location":"TP5/#lancement-dun-conteneur-de-base","title":"Lancement d\u2019un conteneur de base","text":"<p>Lancez un simple conteneur rootless et observer ses param\u00e8tres SELinux.</p> <p>Instructions :</p> <ul> <li>Connectez-vous avec un utilisateur non privil\u00e9gi\u00e9</li> <li>Lancez un conteneur simple :</li> </ul> <p><pre><code>podman run -d --name tp-web -p 8080:80 docker.io/library/nginx\n</code></pre> * Observez les contextes :</p> <pre><code>ps -efZ | grep nginx\nid -Z\n</code></pre> <p>Questions :</p> <ul> <li>Quel est le domaine SELinux du processus nginx ?</li> <li>Quel est le contexte SELinux de votre utilisateur ?</li> </ul>"},{"location":"TP5/#montage-dun-volume-sans-option-de-label","title":"Montage d\u2019un volume sans option de label","text":"<p>But : Observer un \u00e9chec li\u00e9 au contexte SELinux.</p> <p>Instructions :</p> <ul> <li>Cr\u00e9ez un r\u00e9pertoire local et copiez-y un <code>index.html</code></li> <li>Montez ce r\u00e9pertoire dans <code>/usr/share/nginx/html</code> sans option :</li> </ul> <p><pre><code>podman run -d --rm -p 8080:80 -v ./html:/usr/share/nginx/html nginx\n</code></pre> * Ouvrez le navigateur ou faites un <code>curl localhost:8080</code></p> <p>Question :</p> <ul> <li>L\u2019acc\u00e8s fonctionne-t-il ? Si non, pourquoi ?</li> </ul>"},{"location":"TP5/#3-resolution-avec-les-labels-de-volumes","title":"3. R\u00e9solution avec les labels de volumes","text":"<p>But : Comprendre l\u2019impact de <code>:z</code> et <code>:Z</code>.</p> <p>Instructions :</p> <ul> <li>Relancez le conteneur avec l\u2019option <code>:z</code> :</li> </ul> <p><pre><code>podman run -d --rm -p 8080:80 -v ./html:/usr/share/nginx/html:z nginx\n</code></pre> * Observez les contextes du r\u00e9pertoire :</p> <pre><code>ls -Zd ./html\n</code></pre> <p>Questions :</p> <ul> <li>Quelle est la diff\u00e9rence entre <code>:z</code> et <code>:Z</code> ?</li> <li>Pourquoi <code>:z</code> fonctionne dans ce cas ?</li> </ul>"},{"location":"TP5/#4-suppression-manuelle-des-contextes","title":"4. Suppression manuelle des contextes","text":"<p>But : Forcer un blocage et observer un AVC.</p> <p>Instructions :</p> <ul> <li>Supprimez le label :</li> </ul> <p><pre><code>chcon -t etc_t ./html\n</code></pre> * Relancez le conteneur avec le volume. * Observez :</p> <pre><code>journalctl -xe | grep AVC\n</code></pre> <p>Question :</p> <ul> <li>Que dit le message AVC ?</li> <li>Quelle commande permettrait de restaurer le bon contexte ?</li> </ul>"},{"location":"TP5/#5-nettoyage","title":"5. Nettoyage","text":"<ul> <li>Supprimez tous les conteneurs :</li> </ul> <p><pre><code>podman rm -a -f\n</code></pre> * Supprimez le r\u00e9pertoire si besoin :</p>"},{"location":"TP5/#1rm-rf-html","title":"<pre><code>rm -rf ./html\n</code></pre>","text":""},{"location":"TP5/#creation-dune-politique-personnalisee-avec-udica","title":"Cr\u00e9ation d\u2019une politique personnalis\u00e9e avec Udica","text":"<p>G\u00e9n\u00e9rer le JSON de profil :</p> <pre><code>podman generate systemd --name secure-nginx &gt; podman-secure.service\n</code></pre> <p>Cr\u00e9er une politique personnalis\u00e9e :</p> <pre><code>udica secure-nginx\n</code></pre> <p>Installer le module g\u00e9n\u00e9r\u00e9 :</p> <pre><code>sudo semodule -i secure-nginx.cil\n</code></pre> <p>Relancer le conteneur avec le nouveau label :</p> <pre><code>podman run --rm -d --name nginx-udica \\\n  --security-opt label=type:secure_nginx.process \\\n  -v ~/nginx_data:/usr/share/nginx/html:ro,Z \\\n  -p 8085:80 nginx\n</code></pre> <p>V\u00e9rifier :</p> <pre><code>ps -eZ | grep nginx\n</code></pre>"},{"location":"TP5/#nettoyage","title":"Nettoyage","text":"<pre><code>podman stop -a\npodman rm -a\npodman rmi nginx\nsudo semodule -r secure-nginx\nrm -rf ~/nginx_data podman-secure.service\n</code></pre>"},{"location":"TP5/#questions-bonus","title":"Questions bonus","text":"<ul> <li>Pourquoi <code>:Z</code> est risqu\u00e9 \u00e0 utiliser sur des fichiers partag\u00e9s ?</li> <li>Peut-on utiliser <code>Udica</code> avec Docker ?</li> <li>Que permet de faire <code>--security-opt label=disable</code> et dans quels cas est-ce utile ?</li> </ul>"},{"location":"TP5/#flask-selinux-et-conteneurs-podman-rootless","title":"Flask \u2014 SELinux et conteneurs (Podman rootless)","text":""},{"location":"TP5/#objectif-general","title":"Objectif g\u00e9n\u00e9ral","text":"<p>L'application <code>fileserve</code> d\u00e9velopp\u00e9e pr\u00e9c\u00e9demment doit d\u00e9sormais \u00eatre conteneuris\u00e9e avec Podman en mode rootless.</p> <p>Vous devez vous assurer que :</p> <ul> <li>Le conteneur tourne avec les bons contextes SELinux</li> <li>Les volumes sont correctement mont\u00e9s et accessibles</li> <li>Les politiques SELinux emp\u00eachent toute \u00e9l\u00e9vation de privil\u00e8ges ou sortie du p\u00e9rim\u00e8tre</li> </ul>"},{"location":"TP5/#phase-1-conteneurisation-simple-de-fileserve","title":"Phase 1 \u2014 Conteneurisation simple de <code>fileserve</code>","text":"<p>Question : Cr\u00e9ez une image Podman contenant <code>fileserve</code>, construite depuis un <code>Dockerfile</code>. Testez le conteneur en rootless.</p> <p>Correction :</p> <pre><code>FROM fedora:latest\nRUN dnf install -y python3\nCOPY fileserve.py /usr/local/bin/fileserve\nENTRYPOINT [\"python3\", \"/usr/local/bin/fileserve\"]\n</code></pre> <pre><code>podman build -t fileserve .\npodman run --rm localhost/fileserve\n</code></pre>"},{"location":"TP5/#phase-2-activation-de-selinux-dans-les-volumes","title":"Phase 2 \u2014 Activation de SELinux dans les volumes","text":"<p>Question : Montez un volume <code>/srv/files</code> contenant des documents. Quel comportement observe-t-on sans options <code>:z</code> ou <code>:Z</code> ?</p> <p>Correction :</p> <pre><code>mkdir -p /srv/files\necho \"data\" &gt; /srv/files/test.txt\n\npodman run --rm -v /srv/files:/data:ro localhost/fileserve\n# Erreur d'acc\u00e8s probable (Permission denied)\n</code></pre>"},{"location":"TP5/#phase-3-corriger-avec-z-ou-z","title":"Phase 3 \u2014 Corriger avec <code>:Z</code> ou <code>:z</code>","text":"<p>Question : Testez avec les deux options et expliquez la diff\u00e9rence entre <code>:z</code> et <code>:Z</code>.</p> <p>Correction :</p> <pre><code>podman run --rm -v /srv/files:/data:ro,z localhost/fileserve\npodman run --rm -v /srv/files:/data:ro,Z localhost/fileserve\n</code></pre> <ul> <li><code>:z</code> = partageable entre plusieurs conteneurs</li> <li><code>:Z</code> = usage exclusif pour ce conteneur (isolation plus forte)</li> </ul>"},{"location":"TP5/#phase-4-inspection-des-contextes","title":"Phase 4 \u2014 Inspection des contextes","text":"<p>Question : V\u00e9rifiez les contextes SELinux appliqu\u00e9s au volume mont\u00e9.</p> <p>Correction :</p> <pre><code>ls -Z /srv/files\n# Devrait montrer un contexte du type `system_u:object_r:container_file_t:s0`\n</code></pre>"},{"location":"TP5/#phase-5-verifier-le-contexte-du-conteneur-lui-meme","title":"Phase 5 \u2014 V\u00e9rifier le contexte du conteneur lui-m\u00eame","text":"<p>Question : Quel est le contexte SELinux du processus dans le conteneur ? Et celui du volume vu de l\u2019int\u00e9rieur ?</p> <p>Correction :</p> <pre><code>podman run --rm localhost/fileserve id -Z\npodman run --rm localhost/fileserve ls -Z /data\n</code></pre>"},{"location":"TP5/#phase-6-empecher-lacces-a-dautres-volumes","title":"Phase 6 \u2014 Emp\u00eacher l'acc\u00e8s \u00e0 d'autres volumes","text":"<p>Question : Cr\u00e9ez un second dossier <code>/srv/private</code>, montez-le dans un second conteneur. Tentez d\u2019y acc\u00e9der depuis le premier conteneur. Est-ce autoris\u00e9 ?</p> <p>Correction : Si on utilise <code>:Z</code> dans les deux, la s\u00e9paration fonctionne :</p> <pre><code>podman run -v /srv/private:/private:Z ...\n# Si les deux conteneurs ont :Z, ils ne partagent pas les permissions\n</code></pre>"},{"location":"TP5/#phase-7-politique-selinux-specifique-via-security-opt","title":"Phase 7 \u2014 Politique SELinux sp\u00e9cifique via <code>--security-opt</code>","text":"<p>Question : Changez le label du conteneur au runtime pour le faire fonctionner dans un autre domaine.</p> <p>Correction :</p> <pre><code>podman run --security-opt label=type:my_container_t ...\n</code></pre> <p>Il faut que <code>my_container_t</code> soit une cat\u00e9gorie ou type valide dans SELinux.</p>"},{"location":"TP5/#phase-8-generation-dune-politique-personnalisee-avec-udica","title":"Phase 8 \u2014 G\u00e9n\u00e9ration d\u2019une politique personnalis\u00e9e avec udica","text":"<p>Question : Utilisez udica pour g\u00e9n\u00e9rer une politique sp\u00e9cifique \u00e0 votre conteneur <code>fileserve</code>.</p> <p>Correction :</p> <pre><code>dnf install udica\nudica -j fileserve.json\nsemodule -i fileserve.cil\n</code></pre> <p>Fichier <code>fileserve.json</code> minimal :</p> <pre><code>{\n  \"policy_name\": \"fileserve\",\n  \"container_name\": \"fileserve\",\n  \"entrypoint\": [\"/usr/bin/python3\"],\n  \"allow_network\": true,\n  \"allow_pid\": false,\n  \"allow_execmem\": false,\n  \"allow_mount\": false\n}\n</code></pre>"},{"location":"TP5/#phase-9-tester-avec-la-nouvelle-politique","title":"Phase 9 \u2014 Tester avec la nouvelle politique","text":"<p>Question : Red\u00e9marrez le conteneur avec le domaine SELinux g\u00e9n\u00e9r\u00e9 (<code>fileserve_t</code>) et observez le r\u00e9sultat.</p> <p>Correction :</p> <pre><code>podman run --rm --security-opt label=type:fileserve_t ...\n</code></pre>"}]}